//最多n个区间不相交==至少需要n个箭射穿气球
class Solution {
    public int findMinArrowShots(int[][] points) {
        if (points.length == 0) return 0;
         // 按 end 升序排序
        Arrays.sort(points, new Comparator<int[]>() {
            public int compare(int[] a, int[] b) {
                //最近新增了Test Case， [[-2147483646,-2147483645],[2147483646,2147483647]]
                // 就过不了了，这是因为差值过大而产生溢出。sort的时候不要用a-b来比较，要用Integer.compare(a, b)!!!
                return Integer.compare(a[1], b[1]);
            }
        });

        int count = 1;
        int end = points[0][1];
        for(int[] point:points){
            if(point[0]>end){
                count++;
                end = point[1];
            }
        }

        return count;
    }
}